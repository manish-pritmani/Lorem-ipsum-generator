{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\lorem-ipsum-generator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport Options from './components/Options';\nimport Output from './components/Output';\n\nconst App = () => {\n  _s();\n\n  //  Defined all the states we needed in the project.\n  const [paragraphs, setParagraphs] = useState([]);\n  const [tag, setTag] = useState(\"p\");\n  const [inputValue, setInputValue] = useState(1);\n  const [includeHtml, setIncludeHtml] = useState(\"Yes\");\n  const [copiedCode, setCopiedCode] = useState(false); //  Fires only once when the page loads due to empty array. First Render only load\n\n  useEffect(() => {\n    const url = 'https://baconipsum.com/api/?type=all-meat&paras=${inputValue}&start-with-lorem=1';\n    fetch(url).then(response => response.json()).then(data => setParagraphs(data)); //        console.log(url);\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Options, {\n        paragraphs: paragraphs,\n        copiedCode: copiedCode,\n        setCopiedCode: setCopiedCode,\n        tag: tag,\n        setTag: setTag,\n        setInputValue: setInputValue,\n        includeHtml: includeHtml,\n        setIncludeHtml: setIncludeHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"ozrxhm9WRBGmep+QO8VFx2ouN7E=\");\n\n_c = App;\nexport default App; //            While making container component we have made a parameter passing, which is title here and will be rendered like this\n//            <div className=\"container\">\n//            <div className=\"title\">\n//                <h1>Lorem Ipsum Generator</h1>\n//            </div>\n//            </div>\n//Single component is render with <component /> whereas parameterised/nested component is rendered as <component></component>\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/lorem-ipsum-generator/src/App.js"],"names":["React","useState","useEffect","Container","Title","Options","Output","App","paragraphs","setParagraphs","tag","setTag","inputValue","setInputValue","includeHtml","setIncludeHtml","copiedCode","setCopiedCode","url","fetch","then","response","json","data"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAClB;AACI,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,GAAD,CAA9B;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C,CANc,CAQlB;;AACIC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMgB,GAAG,GAAE,kFAAX;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAId,aAAa,CAACc,IAAD,CAF3B,EAFU,CAKlB;AACK,GANQ,EAMP,CAACX,UAAD,CANO,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,OAAD;AACI,QAAA,UAAU,EAAIJ,UADlB;AAEI,QAAA,UAAU,EAAIQ,UAFlB;AAGI,QAAA,aAAa,EAAIC,aAHrB;AAII,QAAA,GAAG,EAAIP,GAJX;AAKI,QAAA,MAAM,EAAIC,MALd;AAMI,QAAA,aAAa,EAAIE,aANrB;AAOI,QAAA,WAAW,EAAIC,WAPnB;AAQI,QAAA,cAAc,EAAIC;AARtB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnCD;;GAAMR,G;;KAAAA,G;AAqCN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport Options from './components/Options';\nimport Output from './components/Output';\n\nconst App = () => {\n//  Defined all the states we needed in the project.\n    const [paragraphs, setParagraphs] = useState([]);\n    const [tag, setTag] = useState(\"p\");\n    const [inputValue, setInputValue] = useState(1);\n    const [includeHtml, setIncludeHtml] = useState(\"Yes\");\n    const [copiedCode, setCopiedCode] = useState(false);\n\n//  Fires only once when the page loads due to empty array. First Render only load\n    useEffect(()=>{\n        const url ='https://baconipsum.com/api/?type=all-meat&paras=${inputValue}&start-with-lorem=1';\n        fetch(url)\n        .then(response => response.json())\n        .then(data => setParagraphs(data));\n//        console.log(url);\n    },[inputValue]);\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Title />\n                <Options\n                    paragraphs = {paragraphs}\n                    copiedCode = {copiedCode}\n                    setCopiedCode = {setCopiedCode}\n                    tag = {tag}\n                    setTag = {setTag}\n                    setInputValue = {setInputValue}\n                    includeHtml = {includeHtml}\n                    setIncludeHtml = {setIncludeHtml}\n                />\n                <Output />\n            </Container>\n        </div>\n    )\n}\n\nexport default App;\n\n//            While making container component we have made a parameter passing, which is title here and will be rendered like this\n//            <div className=\"container\">\n//            <div className=\"title\">\n//                <h1>Lorem Ipsum Generator</h1>\n//            </div>\n//            </div>\n\n//Single component is render with <component /> whereas parameterised/nested component is rendered as <component></component>"]},"metadata":{},"sourceType":"module"}